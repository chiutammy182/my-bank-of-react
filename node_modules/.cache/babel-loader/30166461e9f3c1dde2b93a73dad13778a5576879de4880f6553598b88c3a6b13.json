{"ast":null,"code":"var _jsxFileName = \"/Users/tammychiu/CSCI39548/my-bank-of-react/src/App.js\";\n\n/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.state = {\n      accountBalance: null,\n      //1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: '',\n        //'Joe Smith',\n        memberSince: '' //'11/22/99',\n\n      }\n    };\n  }\n\n  addCredit(creditNum) {\n    let newBalance = this.state.accountBalance + creditNum;\n    this.setState({\n      accountBalance: newBalance\n    });\n  }\n\n  addDebit(debitNum) {\n    let newBalance = this.state.accountBalance - debitNum;\n    this.setState({\n      accountBalance: newBalance\n    });\n  }\n\n  async componentDidMount() {\n    let apiCredits = 'https://johnnylaicode.github.io/api/credits.json'; // Link to remote API endpoint to get credits\n\n    let apiDebits = 'https://johnnylaicode.github.io/api/debits.json';\n\n    try {\n      // Accept success response as array of JSON objects (users)\n      let responseCredits = await axios.get(apiCredits);\n      console.log(responseCredits); // Print out response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        creditList: responseCredits.data\n      }); // Store received data in state's \"users\" object\n\n      let responseDebits = await axios.get(apiDebits);\n      console.log(responseDebits); // Print out response\n      // To get data object in the response, need to use \"response.data\"\n\n      this.setState({\n        debitList: responseDebits.data\n      });\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  updateBalance() {\n    for (cred in creditList) {\n      addCredit(cred);\n    }\n  } // Create Routes and React elements to be rendered using React components\n\n\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 35\n    }, this);\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 36\n    }, this); // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/bank-of-react-example-code-gh-pages\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tammychiu/CSCI39548/my-bank-of-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","axios","Home","UserProfile","LogIn","Credits","Debits","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","accountBalance","creditList","debitList","memberSince","addCredit","creditNum","newBalance","addDebit","debitNum","componentDidMount","apiCredits","apiDebits","responseCredits","get","console","log","data","responseDebits","error","response","status","updateBalance","cred","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios'; \n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: null, //1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: '',//'Joe Smith',\n        memberSince: '',//'11/22/99',\n      }\n    };\n  }\n  addCredit(creditNum)\n  {\n    let newBalance = this.state.accountBalance + creditNum;\n    this.setState({accountBalance: newBalance});\n  }\n  addDebit(debitNum) \n  {\n    let newBalance = this.state.accountBalance - debitNum;\n    this.setState({accountBalance: newBalance});\n  }\n\n  async componentDidMount()\n  {\n    let apiCredits = 'https://johnnylaicode.github.io/api/credits.json';  // Link to remote API endpoint to get credits\n    let apiDebits = 'https://johnnylaicode.github.io/api/debits.json';\n    try {  // Accept success response as array of JSON objects (users)\n      let responseCredits = await axios.get(apiCredits);\n      console.log(responseCredits);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({creditList: responseCredits.data});  // Store received data in state's \"users\" object\n      let responseDebits = await axios.get(apiDebits);\n      console.log(responseDebits);  // Print out response\n      // To get data object in the response, need to use \"response.data\"\n      this.setState({debitList: responseDebits.data}); \n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\nupdateBalance(){\n  for(cred in creditList)\n    {\n      addCredit(cred);\n    }\n}\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}