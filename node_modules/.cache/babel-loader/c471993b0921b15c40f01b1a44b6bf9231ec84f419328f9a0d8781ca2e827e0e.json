{"ast":null,"code":"var _jsxFileName = \"/Users/tammychiu/CSCI39548/my-bank-of-react/src/App.js\";\n\n/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.state = {\n      accountBalance: 0.00,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: '',\n        memberSince: ''\n      }\n    };\n  } // addCredit = () =>\n  // {\n  //   let newCreditList = [...this.state.creditList];\n  //   let newDate = new Date();\n  //   //newDate = newDate.getFullYear() + '-' + newDate.getMonth() + '-' + newDate.getDate();\n  //   let newCreditEntry = {amount: this.amount, date: newDate, description: this.description, id: this.state.creditList.length};\n  //   newCreditList.push_back(newCreditEntry);\n  //   this.setState({creditList: newCreditList});\n  //   let newBalance = this.state.accountBalance + this.amount;\n  //   this.setState({accountBalance: newBalance});\n  // }\n  // addDebit = (debitNum) =>\n  // {\n  //   let newBalance = this.state.accountBalance - debitNum;\n  //   this.setState({accountBalance: newBalance});\n  // }\n\n\n  async componentDidMount() {\n    let balance = 0.00;\n    let apiCredits = 'https://johnnylaicode.github.io/api/credits.json'; // Link to remote API endpoint to get credits\n\n    let apiDebits = 'https://johnnylaicode.github.io/api/debits.json'; // Link to remote API endpoint to get debits\n\n    try {\n      // Accept success response as array of JSON objects (credits and debits)\n      let responseCredits = await axios.get(apiCredits); // Store received data in state's \"creditList\" object\n\n      this.setState({\n        creditList: responseCredits.data\n      }); // set the state of creditList\n\n      for (let i = 0; i < this.state.creditList.length; i++) // add up all of the credit amounts to balance\n      balance += this.state.creditList[i].amount;\n\n      let responseDebits = await axios.get(apiDebits); // Store received data in state's \"creditList\" object\n\n      this.setState({\n        debitList: responseDebits.data\n      }); // set the state of debitList\n\n      for (let i = 0; i < this.state.debitList.length; i++) // subtract the debits from balance\n      balance -= this.state.debitList[i].amount;\n\n      balance += this.state.accountBalance; // calculate the new accountBalance\n\n      this.setState({\n        accountBalance: balance\n      }); // set the state of accountBalance\n    } // catches any errors when calling api\n    catch (error) {\n      if (error.response) {\n        console.log(error.response.data); // Print out error message \n\n        console.log(error.response.status); // Print out error status code \n      }\n    }\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 35\n    }, this);\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 36\n    }, this); // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/bank-of-react-example-code-gh-pages\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tammychiu/CSCI39548/my-bank-of-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","axios","Home","UserProfile","LogIn","Credits","Debits","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","accountBalance","creditList","debitList","memberSince","componentDidMount","balance","apiCredits","apiDebits","responseCredits","get","data","i","length","amount","responseDebits","error","response","console","log","status","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport axios from 'axios'; \n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0.00, \n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: '',\n        memberSince: '',\n      }\n    };\n  }\n  // addCredit = () =>\n  // {\n  //   let newCreditList = [...this.state.creditList];\n  //   let newDate = new Date();\n  //   //newDate = newDate.getFullYear() + '-' + newDate.getMonth() + '-' + newDate.getDate();\n  //   let newCreditEntry = {amount: this.amount, date: newDate, description: this.description, id: this.state.creditList.length};\n  //   newCreditList.push_back(newCreditEntry);\n  //   this.setState({creditList: newCreditList});\n  //   let newBalance = this.state.accountBalance + this.amount;\n  //   this.setState({accountBalance: newBalance});\n  // }\n  // addDebit = (debitNum) =>\n  // {\n  //   let newBalance = this.state.accountBalance - debitNum;\n  //   this.setState({accountBalance: newBalance});\n  // }\n  async componentDidMount()\n  {\n    let balance = 0.00;\n    let apiCredits = 'https://johnnylaicode.github.io/api/credits.json';  // Link to remote API endpoint to get credits\n    let apiDebits = 'https://johnnylaicode.github.io/api/debits.json';    // Link to remote API endpoint to get debits\n    try {  // Accept success response as array of JSON objects (credits and debits)\n      let responseCredits = await axios.get(apiCredits);  // Store received data in state's \"creditList\" object\n      this.setState({creditList: responseCredits.data});  // set the state of creditList\n      for(let i=0;i<this.state.creditList.length;i++)    // add up all of the credit amounts to balance\n        balance += this.state.creditList[i].amount;\n      let responseDebits = await axios.get(apiDebits);    // Store received data in state's \"creditList\" object\n      this.setState({debitList: responseDebits.data});    // set the state of debitList\n      for(let i=0;i<this.state.debitList.length;i++)      // subtract the debits from balance\n        balance -= this.state.debitList[i].amount;\n      balance += this.state.accountBalance;               // calculate the new accountBalance\n      this.setState({accountBalance: balance});           // set the state of accountBalance\n    } \n    // catches any errors when calling api\n    catch (error) {  \n      if (error.response) {\n        console.log(error.response.data);  // Print out error message \n        console.log(error.response.status);  // Print out error status code \n      }    \n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}